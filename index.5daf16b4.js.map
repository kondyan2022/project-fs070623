{"mappings":"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","sources":["<anon>","src/index.js","src/js/weekly.js","src/js/upcoming.js","src/js/local-storage.js"],"sourcesContent":["var $parcel$global =\ntypeof globalThis !== 'undefined'\n  ? globalThis\n  : typeof self !== 'undefined'\n  ? self\n  : typeof window !== 'undefined'\n  ? window\n  : typeof global !== 'undefined'\n  ? global\n  : {};\nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequired7c6\"];\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequired7c6\"] = parcelRequire;\n}\nparcelRequire(\"faBfA\");\nparcelRequire(\"h5Hr7\");\nparcelRequire(\"bUb57\");\nparcelRequire(\"eEHR3\");\n\nvar $9MaFa = parcelRequire(\"9MaFa\");\n\nvar $7274P = parcelRequire(\"7274P\");\n\nvar $bEw54 = parcelRequire(\"bEw54\");\nparcelRequire(\"I2Abx\");\n\nvar $38Z3Q = parcelRequire(\"38Z3Q\");\n//import getGenres from './get-genres';\nconst $c10c282de78da56f$var$myService = new (0, $9MaFa.default)();\nconst $c10c282de78da56f$var$weeklyGallery = document.querySelector(\".weekly-gallery\");\n$c10c282de78da56f$var$weeklyGallery.addEventListener(\"click\", $c10c282de78da56f$var$hendlerOpenModalWindow);\nfunction $c10c282de78da56f$var$hendlerOpenModalWindow(evt) {\n    const el = evt.target.closest(\"[film-id]\");\n    if (el) (0, $38Z3Q.openModalCard)(el.getAttribute(\"film-id\"));\n}\n$c10c282de78da56f$var$renderGalleryWeekly();\nfunction $c10c282de78da56f$var$renderGalleryWeekly() {\n    $c10c282de78da56f$var$myService.fetchTrendingWeekMovies().then((resp)=>{\n        const movies = resp.data.results;\n        const indexes = $c10c282de78da56f$var$rendomIndx(movies.length - 1);\n        const weeklyMovies = [];\n        indexes.forEach((index)=>{\n            const movie = movies[index];\n            weeklyMovies.push(movie);\n        });\n        function createMarkup(arr) {\n            return weeklyMovies.map((a)=>(0, $7274P.default)(a, (0, $bEw54.default))).join(\"\");\n        }\n        $c10c282de78da56f$var$weeklyGallery.innerHTML = createMarkup(weeklyMovies);\n    }).catch((e)=>console.error(e));\n}\nfunction $c10c282de78da56f$var$rendomIndx(x) {\n    const moviesIndx = [];\n    while(moviesIndx.length < 3){\n        const num = Math.floor(Math.random() * x);\n        if (moviesIndx.includes(num)) continue;\n        else moviesIndx.push(num);\n    }\n    return moviesIndx;\n}\n\n\n\nvar $9MaFa = parcelRequire(\"9MaFa\");\n\nvar $2rpgd = parcelRequire(\"2rpgd\");\n// Функція для збереження даних у локальному сховищі\nconst $8125d1701b78b442$export$1b8cd2d0ef9a8e5d = (key, data)=>{\n    try {\n        const serializedData = JSON.stringify(data);\n        localStorage.setItem(key, serializedData);\n    } catch (error) {\n        console.error(`Error saving ${key} to localStorage:`, error);\n    }\n};\nconst $8125d1701b78b442$export$e68c847c0bceb7d5 = (key)=>{\n    try {\n        const serializedData = localStorage.getItem(key);\n        return serializedData ? JSON.parse(serializedData) : undefined;\n    } catch (error) {\n        console.error(`Error loading ${key} from localStorage:`, error);\n        return undefined;\n    }\n};\nconst $8125d1701b78b442$export$aa8cd6a69a90bc68 = (key)=>{\n    try {\n        localStorage.removeItem(key);\n    } catch (error) {\n        console.error(`Error removing ${key} from localStorage:`, error);\n    }\n};\nfunction $8125d1701b78b442$export$dedbdfbe33455f98(id, select) {\n    const sel = select + \"Data\";\n    const moviesData = $8125d1701b78b442$export$e68c847c0bceb7d5(\"moviesData\");\n    const movieData = moviesData.find((movie)=>movie.id === id);\n    const libArr = $8125d1701b78b442$export$e68c847c0bceb7d5(select) || [];\n    const libData = $8125d1701b78b442$export$e68c847c0bceb7d5(sel) || [];\n    const index = libArr.indexOf(id);\n    if (index < 0) {\n        libArr.push(id);\n        libData.push(movieData);\n    } else {\n        libArr.splice(index, 1);\n        libData.splice(index, 1);\n    }\n    $8125d1701b78b442$export$1b8cd2d0ef9a8e5d(select, libArr);\n    $8125d1701b78b442$export$1b8cd2d0ef9a8e5d(sel, libData);\n}\nfunction $8125d1701b78b442$export$2e1065431db372bb(data) {\n    $8125d1701b78b442$export$1b8cd2d0ef9a8e5d(\"moviesData\", data.results);\n}\nfunction $8125d1701b78b442$export$72072733bf1f4481({ id: newId , title: title , poster_path: poster_path , genre_ids: genre_ids , release_date: release_date , vote_average: vote_average  }) {\n    const arrayLibrary = $8125d1701b78b442$export$e68c847c0bceb7d5(\"moviesData\") || [];\n    if (!arrayLibrary.filter(({ id: id  })=>id == newId).length) {\n        arrayLibrary.push({\n            id: newId,\n            title: title,\n            poster_path: poster_path,\n            genre_ids: genre_ids,\n            release_date: release_date,\n            vote_average: vote_average\n        });\n        $8125d1701b78b442$export$1b8cd2d0ef9a8e5d(\"moviesData\", arrayLibrary);\n    }\n}\nfunction $8125d1701b78b442$export$fb91a52e6ec6eb82() {\n    return $8125d1701b78b442$export$e68c847c0bceb7d5(\"moviesData\") || [];\n}\nfunction $8125d1701b78b442$export$acfc7dc7ffc23978(idForRemove) {\n    const arrayLibrary = $8125d1701b78b442$export$e68c847c0bceb7d5(\"moviesData\") || [];\n    $8125d1701b78b442$export$1b8cd2d0ef9a8e5d(\"moviesData\", arrayLibrary.filter(({ id: id  })=>id != idForRemove));\n}\nfunction $8125d1701b78b442$export$7b71630ca99ee5be(idForCheck) {\n    const arrayLibrary = $8125d1701b78b442$export$e68c847c0bceb7d5(\"moviesData\") || [];\n    return arrayLibrary.filter(({ id: id  })=>id == idForCheck).length === 1;\n}\n\n\nconst $65414923e0a79c46$var$wrapperForRender = document.querySelector(\".js-upcoming-wrapper\");\nconst $65414923e0a79c46$var$serviceUpcoming = new (0, $9MaFa.default)();\nfunction $65414923e0a79c46$var$creatMarkup(movie) {\n    return `\n    <div class=\"upcoming-left-wrap\">\n        <div class=\"up-thumb\">\n            <img\n                srcset=\"\n                    https://image.tmdb.org/t/p/w300/${movie.backdrop_path}      300w,\n                    https://image.tmdb.org/t/p/w780/${movie.backdrop_path}      780w,\n                    https://image.tmdb.org/t/p/w1280/${movie.backdrop_path}      1280w,\n                    https://image.tmdb.org/t/p/original/${movie.backdrop_path}  3840w\n                \"\n                sizes=\"(min-width: 320px) 498px,\n                        (min-width: 768px) 704px,\n                        (min-width: 1280px) 805px,\n                        100vw\"\n                src=\"https://image.tmdb.org/t/p/w300/${movie.backdrop_path}\"\n                alt=\"${movie.title}\"\n                class=\"upcoming-image\"\n                width=\"1280\"\n                height=\"720\"\n            />\n        </div>\n    </div>\n    <div class=\"upcoming-right-wrap\">\n        <h2 class=\"upcoming-movie-title\">${movie.title}</h2>\n        <table class=\"upcoming-table\">\n            <tr class=\"upcoming-tab-row\">\n                <td class=\"upcoming-data\">Release date</td>\n                <td class=\"upcom-data-release\">${movie.release_date}</td>\n            </tr>\n            <tr class=\"upcoming-tab-row\">\n                <td class=\"upcoming-data\">Vote / Votes</td>\n                <td class=\"upcoming-data-average\">\n                    <span class=\"up-average\">${movie.vote_average}</span>/<span class=\"up-count\">${movie.vote_count}</span>\n                </td>\n            </tr>\n            <tr class=\"upcoming-tab-row\">\n                <td class=\"upcoming-data\">Popularity</td>\n                <td class=\"upcoming-data-get\">${movie.popularity.toFixed(1)}</td>\n            </tr>\n            <tr class=\"upcoming-tab-row\">\n                <td class=\"upcoming-data\">Genre</td>\n                <td class=\"upcoming-data-get\">${(0, $2rpgd.default)().filter(({ id: id  })=>movie.genre_ids.includes(id)).map(({ name: name  })=>name).slice(0, 2).join(\", \")}</td>\n            </tr>\n        </table>\n        <p class=\"upcoming-about\">About</p>\n        <p class=\"upcoming-about-descr\">${movie.overview}</p>\n        <div class=\"up-wrap-btn\">\n            <button type=\"button\" class=\"up-btn\" data-movie-id=\"${movie.id}\">Add to my library</button>\n        </div>\n        </div>\n    `;\n}\n$65414923e0a79c46$var$serviceUpcoming.fetchUpcomingMovies().then((resp)=>{\n    const data = resp.data;\n    const datasUpcoming = {\n        pageCurrent: data.page,\n        totalResults: data.total_results,\n        results: data.results\n    };\n    const arrayResults = datasUpcoming.results; //array with results\n    if (arrayResults.length > 0) {\n        $65414923e0a79c46$var$renderToMarkup(arrayResults);\n        $65414923e0a79c46$var$wrapperForRender.addEventListener(\"click\", (e)=>{\n            console.log(e.currentTarget, e.target);\n            console.log(e.currentTarget);\n            if (e.target === document.querySelector(\".up-btn\")) {\n                // console.log(\"buuuuuton\")\n                const button = e.target;\n                const movieId = e.target.dataset.movieId;\n                const getMovie = arrayResults.find((movie)=>movie.id == movieId);\n                if ((0, $8125d1701b78b442$export$7b71630ca99ee5be)(movieId)) {\n                    (0, $8125d1701b78b442$export$acfc7dc7ffc23978)(movieId);\n                    button.textContent = \"Add to my library\";\n                // console.log(\"remove\");\n                } else {\n                    (0, $8125d1701b78b442$export$72072733bf1f4481)(getMovie);\n                    button.textContent = \"Remove from my library\";\n                // console.log(\"save\");\n                }\n            }\n        });\n    } else if (arrayResults.length === 0) $65414923e0a79c46$var$wrapperForRender.innerHTML = '<p class=\"upcoming-error\">OOPS... We are very sorry! Upcoming this month not found.</p>';\n}).catch((e)=>console.error(e));\nfunction $65414923e0a79c46$var$renderToMarkup(array) {\n    const randomIndex = $65414923e0a79c46$var$getRandomIndex();\n    const randomMovie = array.filter((movie)=>movie.backdrop_path !== null).map((movie)=>{\n        const movieMarkup = $65414923e0a79c46$var$creatMarkup(movie);\n        return {\n            id: movie.id,\n            markup: movieMarkup\n        };\n    })[randomIndex];\n    console.log(randomMovie);\n    const { id: id , markup: markup  } = randomMovie;\n    $65414923e0a79c46$var$wrapperForRender.innerHTML = markup;\n    const btnSaveToLocalStorage = document.querySelector(\".up-btn\");\n    if ((0, $8125d1701b78b442$export$7b71630ca99ee5be)(id)) {\n        console.log((0, $8125d1701b78b442$export$7b71630ca99ee5be)(id));\n        btnSaveToLocalStorage.textContent = \"Remove from my library\";\n    } else {\n        console.log(\"not\");\n        btnSaveToLocalStorage.textContent = \"Add to my library\";\n    }\n}\nfunction $65414923e0a79c46$var$getRandomIndex() {\n    return Math.floor(Math.random() * 15);\n}\n\n\nparcelRequire(\"38Z3Q\");\nparcelRequire(\"I2Abx\");\nparcelRequire(\"6fsAg\");\nparcelRequire(\"epHO8\");\n\n\n//# sourceMappingURL=index.5daf16b4.js.map\n","import './js/load-genres';\nimport './js/totop';\nimport './js/header';\nimport './js/hero';\nimport './js/weekly';\nimport './js/upcoming';\nimport './js/modal-poster';\nimport './js/modal-trailer';\nimport './js/ourteam';\nimport './js/footer';\n","import TMDBApiService from './tmdb-api';\nimport getFilmCard from './film-card';\nimport getFiveStar from './fivezerostar';\nimport { modalController } from './modal-trailer';\nimport { openModalCard } from './modal-poster';\n//import getGenres from './get-genres';\n\nconst myService = new TMDBApiService();\nconst weeklyGallery = document.querySelector('.weekly-gallery');\n\nweeklyGallery.addEventListener('click', hendlerOpenModalWindow);\n\nfunction hendlerOpenModalWindow(evt) {\n  const el = evt.target.closest('[film-id]');\n  if (el) {\n    openModalCard(el.getAttribute('film-id'));\n  }\n}\n\nrenderGalleryWeekly();\n\nfunction renderGalleryWeekly() {\n  myService\n    .fetchTrendingWeekMovies()\n    .then(resp => {\n      const movies = resp.data.results;\n\n      const indexes = rendomIndx(movies.length - 1);\n      const weeklyMovies = [];\n\n      indexes.forEach(index => {\n        const movie = movies[index];\n        weeklyMovies.push(movie);\n      });\n\n      function createMarkup(arr) {\n        return weeklyMovies.map(a => getFilmCard(a, getFiveStar)).join('');\n      }\n\n      weeklyGallery.innerHTML = createMarkup(weeklyMovies);\n    })\n    .catch(e => console.error(e));\n}\n\nfunction rendomIndx(x) {\n  const moviesIndx = [];\n\n  while (moviesIndx.length < 3) {\n    const num = Math.floor(Math.random() * x);\n\n    if (moviesIndx.includes(num)) {\n      continue;\n    } else {\n      moviesIndx.push(num);\n    }\n  }\n  return moviesIndx;\n}\n","import TMDBApiService from './tmdb-api';\nimport getGenres from './get-genres';\nimport {\n    saveToLibrary,\n    getLibraryList,\n    isInLibrary,\n    removeFromLibrary,\n} from './local-storage';\n\nconst wrapperForRender = document.querySelector('.js-upcoming-wrapper');\nconst serviceUpcoming = new TMDBApiService();\n\nfunction creatMarkup(movie) {\n    return `\n    <div class=\"upcoming-left-wrap\">\n        <div class=\"up-thumb\">\n            <img\n                srcset=\"\n                    https://image.tmdb.org/t/p/w300/${movie.backdrop_path}      300w,\n                    https://image.tmdb.org/t/p/w780/${movie.backdrop_path}      780w,\n                    https://image.tmdb.org/t/p/w1280/${movie.backdrop_path}      1280w,\n                    https://image.tmdb.org/t/p/original/${movie.backdrop_path}  3840w\n                \"\n                sizes=\"(min-width: 320px) 498px,\n                        (min-width: 768px) 704px,\n                        (min-width: 1280px) 805px,\n                        100vw\"\n                src=\"https://image.tmdb.org/t/p/w300/${movie.backdrop_path}\"\n                alt=\"${movie.title}\"\n                class=\"upcoming-image\"\n                width=\"1280\"\n                height=\"720\"\n            />\n        </div>\n    </div>\n    <div class=\"upcoming-right-wrap\">\n        <h2 class=\"upcoming-movie-title\">${movie.title}</h2>\n        <table class=\"upcoming-table\">\n            <tr class=\"upcoming-tab-row\">\n                <td class=\"upcoming-data\">Release date</td>\n                <td class=\"upcom-data-release\">${movie.release_date}</td>\n            </tr>\n            <tr class=\"upcoming-tab-row\">\n                <td class=\"upcoming-data\">Vote / Votes</td>\n                <td class=\"upcoming-data-average\">\n                    <span class=\"up-average\">${movie.vote_average}</span>/<span class=\"up-count\">${movie.vote_count}</span>\n                </td>\n            </tr>\n            <tr class=\"upcoming-tab-row\">\n                <td class=\"upcoming-data\">Popularity</td>\n                <td class=\"upcoming-data-get\">${movie.popularity.toFixed(1)}</td>\n            </tr>\n            <tr class=\"upcoming-tab-row\">\n                <td class=\"upcoming-data\">Genre</td>\n                <td class=\"upcoming-data-get\">${getGenres()\n            .filter(({ id }) => movie.genre_ids.includes(id))\n            .map(({ name }) => name)\n            .slice(0, 2)\n            .join(', ')}</td>\n            </tr>\n        </table>\n        <p class=\"upcoming-about\">About</p>\n        <p class=\"upcoming-about-descr\">${movie.overview}</p>\n        <div class=\"up-wrap-btn\">\n            <button type=\"button\" class=\"up-btn\" data-movie-id=\"${movie.id}\">Add to my library</button>\n        </div>\n        </div>\n    `\n}\n\n\nserviceUpcoming\n    .fetchUpcomingMovies()\n    .then((resp) => {\n        const data = resp.data;\n        const datasUpcoming = {\n            pageCurrent: data.page,\n            totalResults: data.total_results,\n            results: data.results\n        }\n        const arrayResults = datasUpcoming.results;//array with results\n        if (arrayResults.length > 0) {\n            renderToMarkup(arrayResults);\n            wrapperForRender.addEventListener('click', (e) => {\n                console.log(e.currentTarget, e.target)\n                console.log(e.currentTarget)\n                if (e.target === document.querySelector('.up-btn')) {\n                    // console.log(\"buuuuuton\")\n                    const button = e.target;\n                    const movieId = e.target.dataset.movieId;\n                    const getMovie = arrayResults.find((movie) => movie.id == movieId);\n                    if (isInLibrary(movieId)) {\n                        removeFromLibrary(movieId);\n                        button.textContent = \"Add to my library\";\n                        // console.log(\"remove\");\n                    } else {\n                        saveToLibrary(getMovie);\n                        button.textContent = \"Remove from my library\";\n                        // console.log(\"save\");\n                    }\n                }\n            })\n        } else if (arrayResults.length === 0) {\n            wrapperForRender.innerHTML = '<p class=\"upcoming-error\">OOPS... We are very sorry! Upcoming this month not found.</p>'\n        }\n    })\n    .catch((e) => console.error(e));\n\nfunction renderToMarkup(array) {\n    const randomIndex = getRandomIndex();\n    const randomMovie = array\n        .filter(movie => movie.backdrop_path !== null)\n        .map(movie => {\n            const movieMarkup = creatMarkup(movie);\n            return {\n                id: movie.id,\n                markup: movieMarkup\n            }\n        })[randomIndex];\n    console.log(randomMovie)\n    const { id, markup } = randomMovie;\n    wrapperForRender.innerHTML = markup;\n    const btnSaveToLocalStorage = document.querySelector('.up-btn');\n    if (isInLibrary(id)) {\n        console.log(isInLibrary(id))\n        btnSaveToLocalStorage.textContent = \"Remove from my library\";\n    } else {\n        console.log(\"not\")\n        btnSaveToLocalStorage.textContent = \"Add to my library\";\n    }\n}\nfunction getRandomIndex() {\n    return Math.floor(Math.random() * 15);\n}\n","// Функція для збереження даних у локальному сховищі\nexport const saveToLocalStorage = (key, data) => {\n  try {\n    const serializedData = JSON.stringify(data);\n    localStorage.setItem(key, serializedData);\n  } catch (error) {\n    console.error(`Error saving ${key} to localStorage:`, error);\n  }\n};\n\n// Функція для отримання даних з локального сховища\nexport const loadFromLocalStorage = key => {\n  try {\n    const serializedData = localStorage.getItem(key);\n    return serializedData ? JSON.parse(serializedData) : undefined;\n  } catch (error) {\n    console.error(`Error loading ${key} from localStorage:`, error);\n    return undefined;\n  }\n};\n\n// Функція для видалення даних з локального сховища\nexport const removeFromLocalStorage = key => {\n  try {\n    localStorage.removeItem(key);\n  } catch (error) {\n    console.error(`Error removing ${key} from localStorage:`, error);\n  }\n};\n\n/**\n * Додає або видаляє фільм з відповідного списку у локальному сховищі.\n *\n * @param {number} id - Ідентифікатор фільму.\n * @param {string} select - Назва списку.\n */\nexport function addListLibrary(id, select) {\n  const sel = select + 'Data';\n  const moviesData = loadFromLocalStorage('moviesData');\n  const movieData = moviesData.find(movie => movie.id === id);\n  const libArr = loadFromLocalStorage(select) || [];\n  const libData = loadFromLocalStorage(sel) || [];\n  const index = libArr.indexOf(id);\n  if (index < 0) {\n    libArr.push(id);\n    libData.push(movieData);\n  } else {\n    libArr.splice(index, 1);\n    libData.splice(index, 1);\n  }\n  saveToLocalStorage(select, libArr);\n  saveToLocalStorage(sel, libData);\n}\n\n/**\n * Оновлює дані фільмів у локальному сховищі.\n *\n * @param {Object} data - Об'єкт з даними фільмів.\n */\nexport function moviesDataUpdate(data) {\n  saveToLocalStorage('moviesData', data.results);\n}\n\nexport function saveToLibrary({\n  id: newId,\n  title,\n  poster_path,\n  genre_ids,\n  release_date,\n  vote_average,\n}) {\n  const arrayLibrary = loadFromLocalStorage('moviesData') || [];\n  if (!arrayLibrary.filter(({ id }) => id == newId).length) {\n    arrayLibrary.push({\n      id: newId,\n      title,\n      poster_path,\n      genre_ids,\n      release_date,\n      vote_average,\n    });\n    saveToLocalStorage('moviesData', arrayLibrary);\n  }\n}\n\nexport function getLibraryList() {\n  return loadFromLocalStorage('moviesData') || [];\n}\n\nexport function removeFromLibrary(idForRemove) {\n  const arrayLibrary = loadFromLocalStorage('moviesData') || [];\n  saveToLocalStorage(\n    'moviesData',\n    arrayLibrary.filter(({ id }) => id != idForRemove)\n  );\n}\n\nexport function isInLibrary(idForCheck) {\n  const arrayLibrary = loadFromLocalStorage('moviesData') || [];\n\n  return arrayLibrary.filter(({ id }) => id == idForCheck).length === 1;\n}"],"names":["$parcel$global","globalThis","self","window","global","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$9MaFa","$7274P","$bEw54","$38Z3Q","$c10c282de78da56f$var$myService","default","$c10c282de78da56f$var$weeklyGallery","document","querySelector","addEventListener","evt","el","target","closest","openModalCard","getAttribute","fetchTrendingWeekMovies","then","resp","movies","data","results","indexes","$c10c282de78da56f$var$rendomIndx","x","moviesIndx","length","num","Math","floor","random","includes","push","weeklyMovies","forEach","index","movie","innerHTML","map","a","join","catch","e","console","error","$2rpgd","$8125d1701b78b442$export$1b8cd2d0ef9a8e5d","key","serializedData","JSON","stringify","localStorage","setItem","$8125d1701b78b442$export$e68c847c0bceb7d5","getItem","parse","undefined","$8125d1701b78b442$export$7b71630ca99ee5be","idForCheck","arrayLibrary","filter","$65414923e0a79c46$var$wrapperForRender","$65414923e0a79c46$var$serviceUpcoming","fetchUpcomingMovies","datasUpcoming","pageCurrent","page","totalResults","total_results","arrayResults","$65414923e0a79c46$var$renderToMarkup","array","randomMovie","backdrop_path","movieMarkup","title","release_date","vote_average","vote_count","popularity","toFixed","genre_ids","name","slice","overview","markup","log","btnSaveToLocalStorage","textContent","currentTarget","button","movieId","dataset","getMovie","find","idForRemove","newId","poster_path"],"version":3,"file":"index.5daf16b4.js.map"}
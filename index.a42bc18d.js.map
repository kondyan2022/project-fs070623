{"mappings":"C,A,W,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,E,S,E,S,E,S,E,S,I,E,E,S,E,E,S,E,E,S,E,S,I,E,E,SEOA,IAAM,EAAY,IAAI,EAAA,OAAa,CAC7B,EAAgB,SAAS,aAAA,CAAc,mBAE7C,EAAc,gBAAA,CAAiB,QAE/B,SAAgC,CAAG,EACjC,IAAM,EAAK,EAAI,MAAA,CAAO,OAAA,CAAQ,aAC1B,GACF,AAAA,CAAA,EAAA,EAAA,aAAY,AAAZ,EAAc,EAAG,YAAA,CAAa,WAElC,GAKE,EACG,uBAAA,GACA,IAAA,CAAK,AAAA,IACJ,IAAM,EAAS,EAAK,IAAA,CAAK,OAAzB,CAEM,EAAU,AAiBtB,SAAoB,CAAC,EACnB,IAAM,EAAa,EAAE,CAErB,KAAO,EAAW,MAAA,CAAS,GAAG,CAC5B,IAAM,EAAM,KAAK,KAAA,CAAM,KAAK,MAAA,GAAW,GAEnC,EAAW,QAAA,CAAS,IAGtB,EAAW,IAAA,CAAK,EAEpB,CACA,OAAO,CACT,EA9BiC,EAAO,MAAA,CAAS,GACrC,EAAe,EAAE,CAEvB,EAAQ,OAAA,CAAQ,AAAA,IACd,IAAM,EAAQ,CAAM,CAAC,EAAM,CAC3B,EAAa,IAAA,CAAK,EACpB,GAMA,EAAc,SAAA,CAHL,EAAa,GAAA,CAAI,AAAA,GAAK,AAAA,CAAA,EAAA,EAAA,OAAU,AAAV,EAAY,EAAG,EAAA,OAAU,GAAI,IAAA,CAAK,GAInE,GACC,KAAA,CAAM,AAAA,GAAK,QAAQ,KAAA,CAAM,I,I,E,E,S,E,E,S,E,E,SChC9B,IAAM,EAAmB,SAAS,aAAA,CAAc,wBAC1C,EAAkB,IAAI,EAAA,OAAa,CAEzC,AACA,CAAA,iBACI,GAAI,CACA,IAAM,EAAO,MAAM,EAAgB,mBAAnC,GACM,EAAO,EAAK,IAAlB,CACM,EAAe,EAAK,OAAA,CAE1B,GAAI,EAAa,MAAA,CAAS,EAAG,CACzB,IAAM,EAAe,MAAM,AClBxB,SAAyB,CAAK,EAEzC,IAAM,EAAc,EACf,MAAA,CAAO,AAAA,GAAS,AAAwB,OAAxB,EAAM,aAAA,EACtB,GAAA,CAAI,AAAA,IACD,IAAM,EAAc,CAAC;;;;;gEAK+B,EAAE,EAAM,aAAA,CAAc;gEACtB,EAAE,EAAM,aAAA,CAAc;iEACrB,EAAE,EAAM,aAAA,CAAc;oEACnB,EAAE,EAAM,aAAA,CAAc;;;;;;iEAMzB,EAAE,EAAM,aAAA,CAAc;iCACtD,EAAE,EAAM,KAAA,CAAM;;;;;;;;qDAQM,EAAE,EAAM,KAAA,CAAM;;;;2DAIR,EAAE,EAAM,YAAA,CAAa;;;;;yDAKvB,EAAE,EAAM,YAAA,CAAa,+BAA+B,EAAE,EAAM,UAAA,CAAW;;;;;0DAKtE,EAAE,EAAM,UAAA,CAAW,OAAA,CAAQ,GAAG;;;;0DAI9B,EAAE,AAAA,CAAA,EAAA,EAAA,OAAQ,AAAR,IACvC,MAAA,CAAO,CAAC,CAAA,GAAE,CAAA,CAAI,GAAK,EAAM,SAAA,CAAU,QAAA,CAAS,IAC5C,GAAA,CAAI,CAAC,CAAA,KAAE,CAAA,CAAM,GAAK,GAClB,KAAA,CAAM,EAAG,GACT,IAAA,CAAK,MAAM;;;;oDAIoB,EAAE,EAAM,QAAA,CAAS;;4EAEO,EAAE,EAAM,EAAA,CAAG;;uBAEhE,CAAC,CACZ,MAAO,CACH,GAAI,EAAM,EAAV,CACA,OAAQ,CACZ,CACJ,EAAE,CA9Dc,KAAK,KAAA,CAAM,AAAgB,GAAhB,KAAK,MAAA,IA8DjB,CAEnB,OAAO,CACX,EDhDuD,GACrC,CAAA,GAAE,CAAA,CAAE,OAAE,CAAA,CAAQ,CAAG,CACvB,CAAA,EAAiB,SAAA,CAAY,EAC7B,IAAM,EAAwB,SAAS,aAAA,CAAc,UACrD,CAAA,AAAA,CAAA,EAAA,EAAA,WAAU,AAAV,EAAY,GAAM,EAAsB,WAAA,CAAc,yBAA2B,EAAsB,WAAA,CAAc,oBAErH,EAAiB,gBAAA,CAAiB,QAAS,AAAC,IACxC,GAAI,EAAE,MAAA,GAAW,SAAS,aAAA,CAAc,WAAY,CAChD,IAAM,EAAS,EAAE,MAAjB,CACM,EAAU,EAAE,MAAA,CAAO,OAAA,CAAQ,OAAjC,CACM,EAAW,EAAa,IAAA,CAAK,AAAC,GAAU,EAAM,EAAA,EAAM,GACtD,AAAA,CAAA,EAAA,EAAA,WAAU,AAAV,EAAY,IACZ,AAAA,CAAA,EAAA,EAAA,iBAAgB,AAAhB,EAAkB,GAClB,EAAO,WAAA,CAAc,sBAErB,AAAA,CAAA,EAAA,EAAA,aAAY,AAAZ,EAAc,GACd,EAAO,WAAA,CAAc,yBAE7B,CACJ,EACJ,MAAmC,IAAxB,EAAa,MAAA,EACpB,CAAA,EAAiB,SAAA,CAAY,yFADjC,CAGJ,CAAE,MAAO,EAAG,CAAE,QAAQ,KAAA,CAAM,EAAG,CACnC,CAAA,I,E,S,E,S,E,S,E,Q","sources":["<anon>","src/index.js","src/js/weekly.js","src/js/upcoming.js","src/js/get-upcoming.js"],"sourcesContent":["(function () {\nvar $parcel$global =\ntypeof globalThis !== 'undefined'\n  ? globalThis\n  : typeof self !== 'undefined'\n  ? self\n  : typeof window !== 'undefined'\n  ? window\n  : typeof global !== 'undefined'\n  ? global\n  : {};\nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequired7c6\"];\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequired7c6\"] = parcelRequire;\n}\nparcelRequire(\"8ERGB\");\nparcelRequire(\"3qT3v\");\nparcelRequire(\"i8Q71\");\nparcelRequire(\"kFyhi\");\n\nvar $kK94C = parcelRequire(\"kK94C\");\n\nvar $b3pWk = parcelRequire(\"b3pWk\");\n\nvar $jMVtP = parcelRequire(\"jMVtP\");\nparcelRequire(\"ijwS8\");\n\nvar $cbbxM = parcelRequire(\"cbbxM\");\n//import getGenres from './get-genres';\nconst $7efa00ec3586167e$var$myService = new (0, $kK94C.default)();\nconst $7efa00ec3586167e$var$weeklyGallery = document.querySelector(\".weekly-gallery\");\n$7efa00ec3586167e$var$weeklyGallery.addEventListener(\"click\", $7efa00ec3586167e$var$hendlerOpenModalWindow);\nfunction $7efa00ec3586167e$var$hendlerOpenModalWindow(evt) {\n    const el = evt.target.closest(\"[film-id]\");\n    if (el) (0, $cbbxM.openModalCard)(el.getAttribute(\"film-id\"));\n}\n$7efa00ec3586167e$var$renderGalleryWeekly();\nfunction $7efa00ec3586167e$var$renderGalleryWeekly() {\n    $7efa00ec3586167e$var$myService.fetchTrendingWeekMovies().then((resp)=>{\n        const movies = resp.data.results;\n        const indexes = $7efa00ec3586167e$var$rendomIndx(movies.length - 1);\n        const weeklyMovies = [];\n        indexes.forEach((index)=>{\n            const movie = movies[index];\n            weeklyMovies.push(movie);\n        });\n        function createMarkup(arr) {\n            return weeklyMovies.map((a)=>(0, $b3pWk.default)(a, (0, $jMVtP.default))).join(\"\");\n        }\n        $7efa00ec3586167e$var$weeklyGallery.innerHTML = createMarkup(weeklyMovies);\n    }).catch((e)=>console.error(e));\n}\nfunction $7efa00ec3586167e$var$rendomIndx(x) {\n    const moviesIndx = [];\n    while(moviesIndx.length < 3){\n        const num = Math.floor(Math.random() * x);\n        if (moviesIndx.includes(num)) continue;\n        else moviesIndx.push(num);\n    }\n    return moviesIndx;\n}\n\n\n\nvar $kK94C = parcelRequire(\"kK94C\");\n\nvar $4LMMA = parcelRequire(\"4LMMA\");\n\nvar $lwvvG = parcelRequire(\"lwvvG\");\nfunction $8fb820620350737d$export$2e2bcd8739ae039(array) {\n    const randomIndex = Math.floor(Math.random() * 15);\n    const randomMovie = array.filter((movie)=>movie.backdrop_path !== null).map((movie)=>{\n        const movieMarkup = `\n                <div class=\"upcoming-left-wrap\">\n                    <div class=\"up-thumb\">\n                        <img\n                            srcset=\"\n                                https://image.tmdb.org/t/p/w300/${movie.backdrop_path}      300w,\n                                https://image.tmdb.org/t/p/w780/${movie.backdrop_path}      780w,\n                                https://image.tmdb.org/t/p/w1280/${movie.backdrop_path}      1280w,\n                                https://image.tmdb.org/t/p/original/${movie.backdrop_path}  3840w\n                            \"\n                            sizes=\"(min-width: 320px) 498px,\n                                    (min-width: 768px) 704px,\n                                    (min-width: 1280px) 805px,\n                                    100vw\"\n                            src=\"https://image.tmdb.org/t/p/w300/${movie.backdrop_path}\"\n                            alt=\"${movie.title}\"\n                            class=\"upcoming-image\"\n                            width=\"1280\"\n                            height=\"720\"\n                        />\n                    </div>\n                </div>\n                <div class=\"upcoming-right-wrap\">\n                    <h2 class=\"upcoming-movie-title\">${movie.title}</h2>\n                    <table class=\"upcoming-table\">\n                        <tr class=\"upcoming-tab-row\">\n                            <td class=\"upcoming-data\">Release date</td>\n                            <td class=\"upcom-data-release\">${movie.release_date}</td>\n                        </tr>\n                        <tr class=\"upcoming-tab-row\">\n                            <td class=\"upcoming-data\">Vote / Votes</td>\n                            <td class=\"upcoming-data-average\">\n                                <span class=\"up-average\">${movie.vote_average}</span>/<span class=\"up-count\">${movie.vote_count}</span>\n                            </td>\n                        </tr>\n                        <tr class=\"upcoming-tab-row\">\n                            <td class=\"upcoming-data\">Popularity</td>\n                            <td class=\"upcoming-data-get\">${movie.popularity.toFixed(1)}</td>\n                        </tr>\n                        <tr class=\"upcoming-tab-row\">\n                            <td class=\"upcoming-data\">Genre</td>\n                            <td class=\"upcoming-data-get\">${(0, $lwvvG.default)().filter(({ id: id  })=>movie.genre_ids.includes(id)).map(({ name: name  })=>name).slice(0, 2).join(\", \")}</td>\n                        </tr>\n                    </table>\n                    <p class=\"upcoming-about\">About</p>\n                    <p class=\"upcoming-about-descr\">${movie.overview}</p>\n                    <div class=\"up-wrap-btn\">\n                        <button type=\"button\" class=\"up-btn\" data-movie-id=\"${movie.id}\">Add to my library</button>\n                    </div>\n                </div>;`;\n        return {\n            id: movie.id,\n            markup: movieMarkup\n        };\n    })[randomIndex];\n    return randomMovie;\n}\n\n\nconst $4c6aab06649ec8ef$var$wrapperForRender = document.querySelector(\".js-upcoming-wrapper\");\nconst $4c6aab06649ec8ef$var$serviceUpcoming = new (0, $kK94C.default)();\n$4c6aab06649ec8ef$var$serviceShowUpcoming();\nasync function $4c6aab06649ec8ef$var$serviceShowUpcoming() {\n    try {\n        const resp = await $4c6aab06649ec8ef$var$serviceUpcoming.fetchUpcomingMovies();\n        const data = resp.data;\n        const arrayResults = data.results; //array with results\n        if (arrayResults.length > 0) {\n            const upcomingFilm = await (0, $8fb820620350737d$export$2e2bcd8739ae039)(arrayResults);\n            const { id: id , markup: markup  } = upcomingFilm;\n            $4c6aab06649ec8ef$var$wrapperForRender.innerHTML = markup;\n            const btnSaveToLocalStorage = document.querySelector(\".up-btn\");\n            (0, $4LMMA.isInLibrary)(id) ? btnSaveToLocalStorage.textContent = \"Remove from my library\" : btnSaveToLocalStorage.textContent = \"Add to my library\";\n            //event\n            $4c6aab06649ec8ef$var$wrapperForRender.addEventListener(\"click\", (e)=>{\n                if (e.target === document.querySelector(\".up-btn\")) {\n                    const button = e.target;\n                    const movieId = e.target.dataset.movieId;\n                    const getMovie = arrayResults.find((movie)=>movie.id == movieId);\n                    if ((0, $4LMMA.isInLibrary)(movieId)) {\n                        (0, $4LMMA.removeFromLibrary)(movieId);\n                        button.textContent = \"Add to my library\";\n                    } else {\n                        (0, $4LMMA.saveToLibrary)(getMovie);\n                        button.textContent = \"Remove from my library\";\n                    }\n                }\n            });\n        } else if (arrayResults.length === 0) $4c6aab06649ec8ef$var$wrapperForRender.innerHTML = '<p class=\"upcoming-error\">OOPS... We are very sorry! Upcoming this month not found.</p>';\n    } catch (e) {\n        console.error(e);\n    }\n}\n\n\nparcelRequire(\"cbbxM\");\nparcelRequire(\"ijwS8\");\nparcelRequire(\"guHir\");\nparcelRequire(\"7hKzD\");\n\n})();\n//# sourceMappingURL=index.a42bc18d.js.map\n","import './js/load-genres';\nimport './js/totop';\nimport './js/header';\nimport './js/newhero';\n// import './js/hero';\nimport './js/weekly';\nimport './js/upcoming';\nimport './js/modal-poster';\nimport './js/modal-trailer';\nimport './js/ourteam';\nimport './js/footer';\n","import TMDBApiService from './tmdb-api';\nimport getFilmCard from './film-card';\nimport getFiveStar from './fivezerostar';\nimport { modalController } from './modal-trailer';\nimport { openModalCard } from './modal-poster';\n//import getGenres from './get-genres';\n\nconst myService = new TMDBApiService();\nconst weeklyGallery = document.querySelector('.weekly-gallery');\n\nweeklyGallery.addEventListener('click', hendlerOpenModalWindow);\n\nfunction hendlerOpenModalWindow(evt) {\n  const el = evt.target.closest('[film-id]');\n  if (el) {\n    openModalCard(el.getAttribute('film-id'));\n  }\n}\n\nrenderGalleryWeekly();\n\nfunction renderGalleryWeekly() {\n  myService\n    .fetchTrendingWeekMovies()\n    .then(resp => {\n      const movies = resp.data.results;\n\n      const indexes = rendomIndx(movies.length - 1);\n      const weeklyMovies = [];\n\n      indexes.forEach(index => {\n        const movie = movies[index];\n        weeklyMovies.push(movie);\n      });\n\n      function createMarkup(arr) {\n        return weeklyMovies.map(a => getFilmCard(a, getFiveStar)).join('');\n      }\n\n      weeklyGallery.innerHTML = createMarkup(weeklyMovies);\n    })\n    .catch(e => console.error(e));\n}\n\nfunction rendomIndx(x) {\n  const moviesIndx = [];\n\n  while (moviesIndx.length < 3) {\n    const num = Math.floor(Math.random() * x);\n\n    if (moviesIndx.includes(num)) {\n      continue;\n    } else {\n      moviesIndx.push(num);\n    }\n  }\n  return moviesIndx;\n}\n","import TMDBApiService from './tmdb-api';\n// import getGenres from './get-genres';\nimport {\n    saveToLibrary,\n    isInLibrary,\n    removeFromLibrary,\n} from './local-storage';\nimport getUpcomingFilm from './get-upcoming';\n\nconst wrapperForRender = document.querySelector('.js-upcoming-wrapper');\nconst serviceUpcoming = new TMDBApiService();\n\nserviceShowUpcoming()\nasync function serviceShowUpcoming() {\n    try {\n        const resp = await serviceUpcoming.fetchUpcomingMovies();\n        const data = resp.data;\n        const arrayResults = data.results;//array with results\n\n        if (arrayResults.length > 0) {\n            const upcomingFilm = await getUpcomingFilm(arrayResults)\n            const { id, markup } = upcomingFilm;\n            wrapperForRender.innerHTML = markup;\n            const btnSaveToLocalStorage = document.querySelector('.up-btn');\n            isInLibrary(id) ? btnSaveToLocalStorage.textContent = \"Remove from my library\" : btnSaveToLocalStorage.textContent = \"Add to my library\";\n            //event\n            wrapperForRender.addEventListener('click', (e) => {\n                if (e.target === document.querySelector('.up-btn')) {\n                    const button = e.target;\n                    const movieId = e.target.dataset.movieId;\n                    const getMovie = arrayResults.find((movie) => movie.id == movieId);\n                    if (isInLibrary(movieId)) {\n                        removeFromLibrary(movieId);\n                        button.textContent = \"Add to my library\";\n                    } else {\n                        saveToLibrary(getMovie);\n                        button.textContent = \"Remove from my library\";\n                    }\n                }\n            })\n        } else if (arrayResults.length === 0) {\n            wrapperForRender.innerHTML = '<p class=\"upcoming-error\">OOPS... We are very sorry! Upcoming this month not found.</p>'\n        }\n    } catch (e) { console.error(e) };\n}\n","import getGenres from './get-genres';\n\nexport default function getUpcomingFilm(array) {\n    const randomIndex = Math.floor(Math.random() * 15);\n    const randomMovie = array\n        .filter(movie => movie.backdrop_path !== null)\n        .map(movie => {\n            const movieMarkup = `\n                <div class=\"upcoming-left-wrap\">\n                    <div class=\"up-thumb\">\n                        <img\n                            srcset=\"\n                                https://image.tmdb.org/t/p/w300/${movie.backdrop_path}      300w,\n                                https://image.tmdb.org/t/p/w780/${movie.backdrop_path}      780w,\n                                https://image.tmdb.org/t/p/w1280/${movie.backdrop_path}      1280w,\n                                https://image.tmdb.org/t/p/original/${movie.backdrop_path}  3840w\n                            \"\n                            sizes=\"(min-width: 320px) 498px,\n                                    (min-width: 768px) 704px,\n                                    (min-width: 1280px) 805px,\n                                    100vw\"\n                            src=\"https://image.tmdb.org/t/p/w300/${movie.backdrop_path}\"\n                            alt=\"${movie.title}\"\n                            class=\"upcoming-image\"\n                            width=\"1280\"\n                            height=\"720\"\n                        />\n                    </div>\n                </div>\n                <div class=\"upcoming-right-wrap\">\n                    <h2 class=\"upcoming-movie-title\">${movie.title}</h2>\n                    <table class=\"upcoming-table\">\n                        <tr class=\"upcoming-tab-row\">\n                            <td class=\"upcoming-data\">Release date</td>\n                            <td class=\"upcom-data-release\">${movie.release_date}</td>\n                        </tr>\n                        <tr class=\"upcoming-tab-row\">\n                            <td class=\"upcoming-data\">Vote / Votes</td>\n                            <td class=\"upcoming-data-average\">\n                                <span class=\"up-average\">${movie.vote_average}</span>/<span class=\"up-count\">${movie.vote_count}</span>\n                            </td>\n                        </tr>\n                        <tr class=\"upcoming-tab-row\">\n                            <td class=\"upcoming-data\">Popularity</td>\n                            <td class=\"upcoming-data-get\">${movie.popularity.toFixed(1)}</td>\n                        </tr>\n                        <tr class=\"upcoming-tab-row\">\n                            <td class=\"upcoming-data\">Genre</td>\n                            <td class=\"upcoming-data-get\">${getGenres()\n                    .filter(({ id }) => movie.genre_ids.includes(id))\n                    .map(({ name }) => name)\n                    .slice(0, 2)\n                    .join(', ')}</td>\n                        </tr>\n                    </table>\n                    <p class=\"upcoming-about\">About</p>\n                    <p class=\"upcoming-about-descr\">${movie.overview}</p>\n                    <div class=\"up-wrap-btn\">\n                        <button type=\"button\" class=\"up-btn\" data-movie-id=\"${movie.id}\">Add to my library</button>\n                    </div>\n                </div>;`;\n            return {\n                id: movie.id,\n                markup: movieMarkup\n            }\n        })[randomIndex];\n\n    return randomMovie;\n}"],"names":["$parcel$global","globalThis","self","window","global","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$kK94C","$b3pWk","$jMVtP","$cbbxM","$7efa00ec3586167e$var$myService","default","$7efa00ec3586167e$var$weeklyGallery","document","querySelector","addEventListener","evt","el","target","closest","openModalCard","getAttribute","fetchTrendingWeekMovies","then","resp","movies","data","results","indexes","$7efa00ec3586167e$var$rendomIndx","x","moviesIndx","length","num","Math","floor","random","includes","push","weeklyMovies","forEach","index","movie","innerHTML","map","a","join","catch","e","console","error","$4LMMA","$lwvvG","$4c6aab06649ec8ef$var$wrapperForRender","$4c6aab06649ec8ef$var$serviceUpcoming","$4c6aab06649ec8ef$var$serviceShowUpcoming","fetchUpcomingMovies","arrayResults","upcomingFilm","array","randomMovie","filter","backdrop_path","movieMarkup","title","release_date","vote_average","vote_count","popularity","toFixed","genre_ids","name","slice","overview","markup","btnSaveToLocalStorage","isInLibrary","textContent","button","movieId","dataset","getMovie","find","removeFromLibrary","saveToLibrary"],"version":3,"file":"index.a42bc18d.js.map"}
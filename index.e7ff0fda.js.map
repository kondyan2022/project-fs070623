{"mappings":"C,A,W,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,C,E,E,C,E,E,E,iB,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,Q,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,K,E,Q,E,E,S,E,O,C,I,E,A,M,uB,E,I,O,E,K,mB,C,C,E,S,S,C,C,C,E,C,C,E,C,C,E,E,kB,G,E,S,E,S,E,S,I,E,E,SGIA,IAAM,EAAY,IAAI,EAAA,QAChB,EAAgB,SAAS,cAAc,mBAE7C,EAAc,iBAAiB,QAE/B,SAAgC,CAAG,EACjC,QAAQ,IAAI,EAAI,OAAO,aAAa,WAAY,eAClD,GAKE,EACG,0BACA,KAAK,AAAA,IACJ,IAAM,EAAS,EAAK,KAAK,QACzB,QAAQ,IAAI,GAGZ,IAAM,EAAU,AAqBtB,SAAqB,CAAC,EACpB,IAAM,EAAgB,EAAE,CACxB,IAAK,IAAI,EAAI,EAAG,EAAI,EAAG,IACrB,EAAc,KAAK,KAAK,MAAM,KAAK,SAAW,IAGhD,OAAO,CACT,EA5BkC,EAAO,OAAS,GAEtC,EAAe,EAAE,CAEvB,EAAQ,QAAQ,AAAA,IACd,IAAM,EAAQ,CAAM,CAAC,EAAM,CAC3B,EAAa,KAAK,EACpB,GAQA,EAAc,UALL,EACJ,IAAI,AAAA,GAAK,ACjCL,CAAA,SACb,CAAA,GAAE,CAAA,CAAE,MAAE,CAAA,CAAK,YAAE,CAAA,CAAW,UAAE,CAAA,CAAS,aAAE,CAAA,CAAY,aAAE,CAAA,CAAc,CACjE,CAAS,EAET,IAAM,EAAQ,EAAU,GACxB,MAAO,CAAC,gCAAgC,EAAE,EAAG;;;sCAGT,EAAE,EAAY;sCACd,EAAE,EAAY;sCACd,EAAE,EAAY;0CACV,EAAE,EAAY;;;;;;yCAMf,EAAE,EAAY;SAC9C,EAAE,EAAM;;aAEJ,EAAE,EAAG;;;;;;gCAMc,EAAE,EAAM;+BACT,EAAE,AC5BlB,CAAA,WACb,GAAM,CAAA,OAAE,CAAA,CAAQ,CAAG,KAAK,MAAM,aAAa,QAAQ,YAAc,CAC/D,OAAQ,EAAE,AACZ,EACA,OAAO,CACT,CAAA,IDwBO,OAAO,CAAC,CAAA,GAAE,CAAA,CAAI,GAAK,EAAU,SAAS,IACtC,IAAI,CAAC,CAAA,KAAE,CAAA,CAAM,GAAK,GAClB,MAAM,EAAG,GACT,KAAK,MAAM,GAAG,EAAE,EAAa,MAAM,EAAG,GAAG;;+BAEjB,EAAE,EAAM;MACjC,CAAC,AACP,CAAA,EDFgC,EAAG,AAAA,GAAK,OAAO,KAAK,MAAM,AAAI,EAAJ,GAAS,KACxD,KAAK,IAIV,QAAQ,IAAI,EACd,GACC,MAAM,AAAA,GAAK,QAAQ,MAAM,I,E,S,E,S,E,S,E,Q","sources":["<anon>","src/index.js","src/js/hero.js","src/js/weekly.js","src/js/film-card.js","src/js/get-genres.js","src/js/upcoming.js"],"sourcesContent":["(function () {\nvar $parcel$global =\ntypeof globalThis !== 'undefined'\n  ? globalThis\n  : typeof self !== 'undefined'\n  ? self\n  : typeof window !== 'undefined'\n  ? window\n  : typeof global !== 'undefined'\n  ? global\n  : {};\nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequired7c6\"];\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequired7c6\"] = parcelRequire;\n}\nparcelRequire(\"8ERGB\");\nparcelRequire(\"3qT3v\");\nparcelRequire(\"i8Q71\");\n\n\n\nvar $kK94C = parcelRequire(\"kK94C\");\nfunction $fab5075d8cb83450$export$2e2bcd8739ae039() {\n    const { genres: genres  } = JSON.parse(localStorage.getItem(\"genres\")) ?? {\n        genres: []\n    };\n    return genres;\n}\n\n\nfunction $80c4189e6cc88ea4$export$2e2bcd8739ae039({ id: id , title: title , poster_path: poster_path , genre_ids: genre_ids , release_date: release_date , vote_average: vote_average  }, getStatrs) {\n    const stars = getStatrs(vote_average);\n    return `<div class=\"film-card\" film-id=\"${id}\">\n  <img\n    srcset=\"\n      https://image.tmdb.org/t/p/w342/${poster_path}      342w,\n      https://image.tmdb.org/t/p/w500/${poster_path}      500w,\n      https://image.tmdb.org/t/p/w780/${poster_path}      780w,\n      https://image.tmdb.org/t/p/original/${poster_path} 2000w\n    \"\n    sizes=\"(min-width:1280px) 395px,\n          (min-width:768px) 224px,\n          (min-width:320px) 280px,\n          100vw\"\n    src=\"https://image.tmdb.org/t/p/w342/${poster_path}\"\n    alt=\"${title}\"\n    class=\"film-card-poster\"\n    film-id=\"${id}\"\n    loading=\"lazy\"\n    width=\"500\"\n    height=\"750\"\n  />\n  <div class=\"film-card-textblock\">\n    <h3 class=\"film-card-title\">${title}</h3>\n    <p class=\"film-card-genre\">${(0, $fab5075d8cb83450$export$2e2bcd8739ae039)().filter(({ id: id  })=>genre_ids.includes(id)).map(({ name: name  })=>name).slice(0, 1).join(\", \")} | ${release_date.slice(0, 4)}</p>\n  </div>\n  <div class=\"film-card-stars\">${stars}</div>\n</div>`;\n}\n\n\n//import getGenres from './get-genres';\nconst $7efa00ec3586167e$var$myService = new (0, $kK94C.default)();\nconst $7efa00ec3586167e$var$weeklyGallery = document.querySelector(\".weekly-gallery\");\n$7efa00ec3586167e$var$weeklyGallery.addEventListener(\"click\", $7efa00ec3586167e$var$hendlerOpenModalWindow);\nfunction $7efa00ec3586167e$var$hendlerOpenModalWindow(evt) {\n    console.log(evt.target.getAttribute(\"film-id\"), \"Це id фільму\");\n}\n$7efa00ec3586167e$var$renderGalleryWeekly();\nfunction $7efa00ec3586167e$var$renderGalleryWeekly() {\n    $7efa00ec3586167e$var$myService.fetchTrendingWeekMovies().then((resp)=>{\n        const movies = resp.data.results;\n        console.log(movies); //отримуємо першу сторінку трендов тижня (20шт)\n        // отримуємо масив з 3х рендомних індексів\n        const indexes = $7efa00ec3586167e$var$rendomIndex(movies.length - 1);\n        // отримуємо масив з 3х фильмів.\n        const weeklyMovies = [];\n        indexes.forEach((index)=>{\n            const movie = movies[index];\n            weeklyMovies.push(movie);\n        });\n        function createMarkup(arr) {\n            return weeklyMovies.map((a)=>(0, $80c4189e6cc88ea4$export$2e2bcd8739ae039)(a, (x)=>String(Math.round(x * 2) / 2))).join(\"\");\n        }\n        $7efa00ec3586167e$var$weeklyGallery.innerHTML = createMarkup(weeklyMovies);\n        console.log(weeklyMovies);\n    }).catch((e)=>console.error(e));\n}\nfunction $7efa00ec3586167e$var$rendomIndex(x) {\n    const rendomIndexes = [];\n    for(let i = 0; i < 3; i++)rendomIndexes.push(Math.floor(Math.random() * x));\n    return rendomIndexes;\n}\n\n\n\n\nparcelRequire(\"cbbxM\");\nparcelRequire(\"ijwS8\");\nparcelRequire(\"guHir\");\nparcelRequire(\"7hKzD\");\n\n})();\n//# sourceMappingURL=index.e7ff0fda.js.map\n","import './js/load-genres';\nimport './js/totop';\nimport './js/header';\nimport './js/hero';\nimport './js/weekly';\nimport './js/upcoming';\nimport './js/modal-poster';\nimport './js/modal-trailer';\nimport './js/ourteam';\nimport './js/footer';\n","","import TMDBApiService from './tmdb-api';\nimport getFilmCard from './film-card';\n//import getGenres from './get-genres';\n\nconst myService = new TMDBApiService();\nconst weeklyGallery = document.querySelector('.weekly-gallery');\n\nweeklyGallery.addEventListener('click', hendlerOpenModalWindow);\n\nfunction hendlerOpenModalWindow(evt) {\n  console.log(evt.target.getAttribute('film-id'), 'Це id фільму');\n}\n\nrenderGalleryWeekly();\n\nfunction renderGalleryWeekly() {\n  myService\n    .fetchTrendingWeekMovies()\n    .then(resp => {\n      const movies = resp.data.results;\n      console.log(movies); //отримуємо першу сторінку трендов тижня (20шт)\n\n      // отримуємо масив з 3х рендомних індексів\n      const indexes = rendomIndex(movies.length - 1);\n      // отримуємо масив з 3х фильмів.\n      const weeklyMovies = [];\n\n      indexes.forEach(index => {\n        const movie = movies[index];\n        weeklyMovies.push(movie);\n      });\n\n      function createMarkup(arr) {\n        return weeklyMovies\n          .map(a => getFilmCard(a, x => String(Math.round(x * 2) / 2)))\n          .join('');\n      }\n\n      weeklyGallery.innerHTML = createMarkup(weeklyMovies);\n      console.log(weeklyMovies);\n    })\n    .catch(e => console.error(e));\n}\n\nfunction rendomIndex(x) {\n  const rendomIndexes = [];\n  for (let i = 0; i < 3; i++) {\n    rendomIndexes.push(Math.floor(Math.random() * x));\n  }\n\n  return rendomIndexes;\n}\n","import getGenres from './get-genres';\nexport default function getFilmCard(\n  { id, title, poster_path, genre_ids, release_date, vote_average },\n  getStatrs\n) {\n  const stars = getStatrs(vote_average);\n  return `<div class=\"film-card\" film-id=\"${id}\">\n  <img\n    srcset=\"\n      https://image.tmdb.org/t/p/w342/${poster_path}      342w,\n      https://image.tmdb.org/t/p/w500/${poster_path}      500w,\n      https://image.tmdb.org/t/p/w780/${poster_path}      780w,\n      https://image.tmdb.org/t/p/original/${poster_path} 2000w\n    \"\n    sizes=\"(min-width:1280px) 395px,\n          (min-width:768px) 224px,\n          (min-width:320px) 280px,\n          100vw\"\n    src=\"https://image.tmdb.org/t/p/w342/${poster_path}\"\n    alt=\"${title}\"\n    class=\"film-card-poster\"\n    film-id=\"${id}\"\n    loading=\"lazy\"\n    width=\"500\"\n    height=\"750\"\n  />\n  <div class=\"film-card-textblock\">\n    <h3 class=\"film-card-title\">${title}</h3>\n    <p class=\"film-card-genre\">${getGenres()\n      .filter(({ id }) => genre_ids.includes(id))\n      .map(({ name }) => name)\n      .slice(0, 1)\n      .join(', ')} | ${release_date.slice(0, 4)}</p>\n  </div>\n  <div class=\"film-card-stars\">${stars}</div>\n</div>`;\n}\n","export default function getGenres() {\n  const { genres } = JSON.parse(localStorage.getItem('genres')) ?? {\n    genres: [],\n  };\n  return genres;\n}\n",""],"names":["$parcel$global","globalThis","self","window","global","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$kK94C","$7efa00ec3586167e$var$myService","default","$7efa00ec3586167e$var$weeklyGallery","document","querySelector","addEventListener","evt","console","log","target","getAttribute","fetchTrendingWeekMovies","then","resp","movies","data","results","indexes","$7efa00ec3586167e$var$rendomIndex","x","rendomIndexes","i","push","Math","floor","random","length","weeklyMovies","forEach","index","movie","innerHTML","map","a","title","poster_path","genre_ids","release_date","vote_average","getStatrs","stars","genres","JSON","parse","localStorage","getItem","filter","includes","name","slice","join","String","round","catch","e","error"],"version":3,"file":"index.e7ff0fda.js.map"}